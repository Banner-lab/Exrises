// 14.7 5.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include "emp.h"

int main()
{
	employee em("Trip", "Harris", "Thumper");
	cout << em << endl;
	em.ShowAll();

	manager ma("Amorphia", "Spindragon", "Nuancer", 5);
	cout << ma << endl;
	ma.ShowAll();

	fink fi("Matt", "Oggs", "Oiler", "Juno Barr");
	cout << fi << endl;
	fi.ShowAll();

	highfink hf(ma, "Cury Kew");
	hf.ShowAll();

	cout << "Press a key for next phase:" << endl;
	cin.get();
	highfink hf2;
	hf2.SetAll();

	cout << "Using an abstr_emp * pointer: \n";
	abstr_emp* tri[4] = { &em, &fi, &hf, &hf2 };
	for (int i = 0; i < 4; i++)
		tri[i]->ShowAll();

	return 0;
}
// 1.因为类数据成员为静态数据成员string和int，默认的赋值运算符将完成数据成员的复制，当类中含有动态分配的数据成员时，才需要显示定义赋值运算符和拷贝构造函数
//2.因为每个类都会需要showall和setall显示和设置自己的数据成员
//3.提供了基本的数据成员和方法，和他的派生类是is-a关系
//4.highfink类继承了前面所有类的数据成员
//5.operator<<显示基类的信息，其他的派生类使用时将自动向下转化为基类的引用，显示基类信息，不需要重载
//
